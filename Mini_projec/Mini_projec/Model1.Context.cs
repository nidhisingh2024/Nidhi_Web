//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mini_projec
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class miniprojectEntities1 : DbContext
    {
        public miniprojectEntities1()
            : base("name=miniprojectEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminDetail> AdminDetails { get; set; }
        public virtual DbSet<Ticket_Booking> Ticket_Booking { get; set; }
        public virtual DbSet<TrainDetail> TrainDetails { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<Fare> Fares { get; set; }
        public virtual DbSet<Seat> Seats { get; set; }
    
        public virtual int Add_fare(Nullable<int> train_no, Nullable<int> fir_AcFare, Nullable<int> sec_AcFare, Nullable<int> slpFare)
        {
            var train_noParameter = train_no.HasValue ?
                new ObjectParameter("train_no", train_no) :
                new ObjectParameter("train_no", typeof(int));
    
            var fir_AcFareParameter = fir_AcFare.HasValue ?
                new ObjectParameter("fir_AcFare", fir_AcFare) :
                new ObjectParameter("fir_AcFare", typeof(int));
    
            var sec_AcFareParameter = sec_AcFare.HasValue ?
                new ObjectParameter("Sec_AcFare", sec_AcFare) :
                new ObjectParameter("Sec_AcFare", typeof(int));
    
            var slpFareParameter = slpFare.HasValue ?
                new ObjectParameter("slpFare", slpFare) :
                new ObjectParameter("slpFare", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_fare", train_noParameter, fir_AcFareParameter, sec_AcFareParameter, slpFareParameter);
        }
    
        public virtual int Add_seat(Nullable<int> train_no, Nullable<int> fir_Ac, Nullable<int> sec_Ac, Nullable<int> slp)
        {
            var train_noParameter = train_no.HasValue ?
                new ObjectParameter("train_no", train_no) :
                new ObjectParameter("train_no", typeof(int));
    
            var fir_AcParameter = fir_Ac.HasValue ?
                new ObjectParameter("fir_Ac", fir_Ac) :
                new ObjectParameter("fir_Ac", typeof(int));
    
            var sec_AcParameter = sec_Ac.HasValue ?
                new ObjectParameter("Sec_Ac", sec_Ac) :
                new ObjectParameter("Sec_Ac", typeof(int));
    
            var slpParameter = slp.HasValue ?
                new ObjectParameter("slp", slp) :
                new ObjectParameter("slp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_seat", train_noParameter, fir_AcParameter, sec_AcParameter, slpParameter);
        }
    
        public virtual int AddTrain(Nullable<decimal> tno, string tname, string source, string dest, string sts)
        {
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(decimal));
    
            var tnameParameter = tname != null ?
                new ObjectParameter("tname", tname) :
                new ObjectParameter("tname", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var destParameter = dest != null ?
                new ObjectParameter("dest", dest) :
                new ObjectParameter("dest", typeof(string));
    
            var stsParameter = sts != null ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTrain", tnoParameter, tnameParameter, sourceParameter, destParameter, stsParameter);
        }
    
        public virtual int modifytrain(Nullable<int> trainno, string source, string dest)
        {
            var trainnoParameter = trainno.HasValue ?
                new ObjectParameter("trainno", trainno) :
                new ObjectParameter("trainno", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var destParameter = dest != null ?
                new ObjectParameter("dest", dest) :
                new ObjectParameter("dest", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifytrain", trainnoParameter, sourceParameter, destParameter);
        }
    
        public virtual int SeatManageProc(Nullable<decimal> trainNo, string @class)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(decimal));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SeatManageProc", trainNoParameter, classParameter);
        }
    
        public virtual int Softdeletetrain(Nullable<int> trainno)
        {
            var trainnoParameter = trainno.HasValue ?
                new ObjectParameter("trainno", trainno) :
                new ObjectParameter("trainno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Softdeletetrain", trainnoParameter);
        }
    
        public virtual int addFare(Nullable<int> tno, Nullable<int> firAcf, Nullable<int> secAcf, Nullable<int> slf)
        {
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(int));
    
            var firAcfParameter = firAcf.HasValue ?
                new ObjectParameter("firAcf", firAcf) :
                new ObjectParameter("firAcf", typeof(int));
    
            var secAcfParameter = secAcf.HasValue ?
                new ObjectParameter("SecAcf", secAcf) :
                new ObjectParameter("SecAcf", typeof(int));
    
            var slfParameter = slf.HasValue ?
                new ObjectParameter("Slf", slf) :
                new ObjectParameter("Slf", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addFare", tnoParameter, firAcfParameter, secAcfParameter, slfParameter);
        }
    
        public virtual int addseat(Nullable<int> tno, Nullable<int> firAc, Nullable<int> secAc, Nullable<int> sl)
        {
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(int));
    
            var firAcParameter = firAc.HasValue ?
                new ObjectParameter("firAc", firAc) :
                new ObjectParameter("firAc", typeof(int));
    
            var secAcParameter = secAc.HasValue ?
                new ObjectParameter("SecAc", secAc) :
                new ObjectParameter("SecAc", typeof(int));
    
            var slParameter = sl.HasValue ?
                new ObjectParameter("Sl", sl) :
                new ObjectParameter("Sl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addseat", tnoParameter, firAcParameter, secAcParameter, slParameter);
        }
    
        public virtual int SeatManageProcCan(Nullable<decimal> trainNo, string @class)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(decimal));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SeatManageProcCan", trainNoParameter, classParameter);
        }
    }
}
